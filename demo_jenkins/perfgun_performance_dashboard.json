{
  "dashboard": {
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": "-- Grafana --",
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "gnetId": null,
    "graphTooltip": 0,
    "id": null,
    "iteration": 1549373424628,
    "links": [],
    "panels": [
      {
        "cacheTimeout": null,
        "colorBackground": false,
        "colorValue": false,
        "colors": [
          "#299c46",
          "rgba(237, 129, 40, 0.89)",
          "#d44a3a"
        ],
        "datasource": "gatling",
        "format": "none",
        "gauge": {
          "maxValue": 100,
          "minValue": 0,
          "show": false,
          "thresholdLabels": false,
          "thresholdMarkers": true
        },
        "gridPos": {
          "h": 4,
          "w": 4,
          "x": 0,
          "y": 0
        },
        "id": 10,
        "interval": null,
        "links": [],
        "mappingType": 1,
        "mappingTypes": [
          {
            "name": "value to text",
            "value": 1
          },
          {
            "name": "range to text",
            "value": 2
          }
        ],
        "maxDataPoints": 100,
        "nullPointMode": "connected",
        "nullText": null,
        "postfix": "",
        "postfixFontSize": "50%",
        "prefix": "",
        "prefixFontSize": "50%",
        "rangeMaps": [
          {
            "from": "null",
            "text": "N/A",
            "to": "null"
          }
        ],
        "sparkline": {
          "fillColor": "rgba(31, 118, 189, 0.18)",
          "full": false,
          "lineColor": "rgb(31, 120, 193)",
          "show": false
        },
        "tableColumn": "",
        "targets": [
          {
            "alias": "total_req",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT SUM(count) FROM  \"$test_type\"  WHERE  \"request_name\"= 'allRequests' AND \"simulation\"= '$test' AND \"status\" = 'all'  AND \"user_count\" = '$users' AND \"env\"='$env' AND $timeFilter GROUP BY count",
            "rawQuery": true,
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "thresholds": "",
        "title": "Total Requests",
        "transparent": true,
        "type": "singlestat",
        "valueFontSize": "80%",
        "valueMaps": [
          {
            "op": "=",
            "text": "N/A",
            "value": "null"
          }
        ],
        "valueName": "avg"
      },
      {
        "cacheTimeout": null,
        "colorBackground": false,
        "colorValue": false,
        "colors": [
          "#299c46",
          "rgba(237, 129, 40, 0.89)",
          "#d44a3a"
        ],
        "datasource": "gatling",
        "format": "none",
        "gauge": {
          "maxValue": 100,
          "minValue": 0,
          "show": false,
          "thresholdLabels": false,
          "thresholdMarkers": true
        },
        "gridPos": {
          "h": 4,
          "w": 4,
          "x": 4,
          "y": 0
        },
        "id": 11,
        "interval": null,
        "links": [],
        "mappingType": 1,
        "mappingTypes": [
          {
            "name": "value to text",
            "value": 1
          },
          {
            "name": "range to text",
            "value": 2
          }
        ],
        "maxDataPoints": 100,
        "nullPointMode": "connected",
        "nullText": null,
        "postfix": "",
        "postfixFontSize": "50%",
        "prefix": "",
        "prefixFontSize": "50%",
        "rangeMaps": [
          {
            "from": "null",
            "text": "N/A",
            "to": "null"
          }
        ],
        "sparkline": {
          "fillColor": "rgba(31, 118, 189, 0.18)",
          "full": false,
          "lineColor": "rgb(31, 120, 193)",
          "show": false
        },
        "tableColumn": "",
        "targets": [
          {
            "alias": "total_req",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT SUM(count) FROM  \"$test_type\"  WHERE  \"request_name\"= 'allRequests' AND \"simulation\"= '$test' AND \"status\" = 'ko'  AND \"user_count\" = '$users' AND \"env\"='$env' AND $timeFilter GROUP BY count",
            "rawQuery": true,
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "thresholds": "",
        "title": "Failed Requests",
        "transparent": true,
        "type": "singlestat",
        "valueFontSize": "80%",
        "valueMaps": [
          {
            "op": "=",
            "text": "N/A",
            "value": "null"
          }
        ],
        "valueName": "avg"
      },
      {
        "cacheTimeout": null,
        "colorBackground": false,
        "colorValue": false,
        "colors": [
          "#299c46",
          "rgba(237, 129, 40, 0.89)",
          "#d44a3a"
        ],
        "datasource": "gatling",
        "format": "none",
        "gauge": {
          "maxValue": 100,
          "minValue": 0,
          "show": false,
          "thresholdLabels": false,
          "thresholdMarkers": true
        },
        "gridPos": {
          "h": 4,
          "w": 4,
          "x": 8,
          "y": 0
        },
        "id": 12,
        "interval": null,
        "links": [],
        "mappingType": 1,
        "mappingTypes": [
          {
            "name": "value to text",
            "value": 1
          },
          {
            "name": "range to text",
            "value": 2
          }
        ],
        "maxDataPoints": 100,
        "nullPointMode": "connected",
        "nullText": null,
        "postfix": "",
        "postfixFontSize": "50%",
        "prefix": "",
        "prefixFontSize": "50%",
        "rangeMaps": [
          {
            "from": "null",
            "text": "N/A",
            "to": "null"
          }
        ],
        "sparkline": {
          "fillColor": "rgba(31, 118, 189, 0.18)",
          "full": false,
          "lineColor": "rgb(31, 120, 193)",
          "show": false
        },
        "tableColumn": "",
        "targets": [
          {
            "alias": "total_req",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT MEAN(count) FROM  \"$test_type\"  WHERE  \"request_name\"= 'allRequests' AND \"simulation\"= '$test' AND \"status\" = 'all'  AND \"user_count\" = '$users' AND \"env\"='$env' AND $timeFilter GROUP BY time(1s)",
            "rawQuery": true,
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "thresholds": "",
        "title": "Average RPS",
        "transparent": true,
        "type": "singlestat",
        "valueFontSize": "80%",
        "valueMaps": [
          {
            "op": "=",
            "text": "N/A",
            "value": "null"
          }
        ],
        "valueName": "avg"
      },
      {
        "cacheTimeout": null,
        "colorBackground": false,
        "colorValue": false,
        "colors": [
          "#299c46",
          "rgba(237, 129, 40, 0.89)",
          "#d44a3a"
        ],
        "datasource": "gatling",
        "format": "none",
        "gauge": {
          "maxValue": 100,
          "minValue": 0,
          "show": false,
          "thresholdLabels": false,
          "thresholdMarkers": true
        },
        "gridPos": {
          "h": 4,
          "w": 4,
          "x": 12,
          "y": 0
        },
        "id": 13,
        "interval": null,
        "links": [],
        "mappingType": 1,
        "mappingTypes": [
          {
            "name": "value to text",
            "value": 1
          },
          {
            "name": "range to text",
            "value": 2
          }
        ],
        "maxDataPoints": 100,
        "nullPointMode": "connected",
        "nullText": null,
        "postfix": "",
        "postfixFontSize": "50%",
        "prefix": "",
        "prefixFontSize": "50%",
        "rangeMaps": [
          {
            "from": "null",
            "text": "N/A",
            "to": "null"
          }
        ],
        "sparkline": {
          "fillColor": "rgba(31, 118, 189, 0.18)",
          "full": false,
          "lineColor": "rgb(31, 120, 193)",
          "show": false
        },
        "tableColumn": "",
        "targets": [
          {
            "alias": "total_req",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT min(min) FROM  \"$test_type\"  WHERE  \"request_name\"= 'allRequests' AND \"simulation\"= '$test' AND \"status\" = 'ok'  AND \"user_count\" = '$users' AND \"env\"='$env' AND $timeFilter GROUP BY count",
            "rawQuery": true,
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "thresholds": "",
        "title": "Min, ms",
        "transparent": true,
        "type": "singlestat",
        "valueFontSize": "80%",
        "valueMaps": [
          {
            "op": "=",
            "text": "N/A",
            "value": "null"
          }
        ],
        "valueName": "avg"
      },
      {
        "cacheTimeout": null,
        "colorBackground": false,
        "colorValue": false,
        "colors": [
          "#299c46",
          "rgba(237, 129, 40, 0.89)",
          "#d44a3a"
        ],
        "datasource": "gatling",
        "format": "none",
        "gauge": {
          "maxValue": 100,
          "minValue": 0,
          "show": false,
          "thresholdLabels": false,
          "thresholdMarkers": true
        },
        "gridPos": {
          "h": 4,
          "w": 4,
          "x": 16,
          "y": 0
        },
        "id": 14,
        "interval": null,
        "links": [],
        "mappingType": 1,
        "mappingTypes": [
          {
            "name": "value to text",
            "value": 1
          },
          {
            "name": "range to text",
            "value": 2
          }
        ],
        "maxDataPoints": 100,
        "nullPointMode": "connected",
        "nullText": null,
        "postfix": "",
        "postfixFontSize": "50%",
        "prefix": "",
        "prefixFontSize": "50%",
        "rangeMaps": [
          {
            "from": "null",
            "text": "N/A",
            "to": "null"
          }
        ],
        "sparkline": {
          "fillColor": "rgba(31, 118, 189, 0.18)",
          "full": false,
          "lineColor": "rgb(31, 120, 193)",
          "show": false
        },
        "tableColumn": "",
        "targets": [
          {
            "alias": "total_req",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT mean(percentiles50) FROM  \"$test_type\"  WHERE  \"request_name\"= 'allRequests' AND \"simulation\"= '$test' AND \"status\" = 'ok'  AND \"user_count\" = '$users' AND \"env\"='$env' AND $timeFilter GROUP BY count",
            "rawQuery": true,
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "thresholds": "",
        "title": "Median, ms",
        "transparent": true,
        "type": "singlestat",
        "valueFontSize": "80%",
        "valueMaps": [
          {
            "op": "=",
            "text": "N/A",
            "value": "null"
          }
        ],
        "valueName": "avg"
      },
      {
        "cacheTimeout": null,
        "colorBackground": false,
        "colorValue": false,
        "colors": [
          "#299c46",
          "rgba(237, 129, 40, 0.89)",
          "#d44a3a"
        ],
        "datasource": "gatling",
        "format": "none",
        "gauge": {
          "maxValue": 100,
          "minValue": 0,
          "show": false,
          "thresholdLabels": false,
          "thresholdMarkers": true
        },
        "gridPos": {
          "h": 4,
          "w": 4,
          "x": 20,
          "y": 0
        },
        "id": 15,
        "interval": null,
        "links": [],
        "mappingType": 1,
        "mappingTypes": [
          {
            "name": "value to text",
            "value": 1
          },
          {
            "name": "range to text",
            "value": 2
          }
        ],
        "maxDataPoints": 100,
        "nullPointMode": "connected",
        "nullText": null,
        "postfix": "",
        "postfixFontSize": "50%",
        "prefix": "",
        "prefixFontSize": "50%",
        "rangeMaps": [
          {
            "from": "null",
            "text": "N/A",
            "to": "null"
          }
        ],
        "sparkline": {
          "fillColor": "rgba(31, 118, 189, 0.18)",
          "full": false,
          "lineColor": "rgb(31, 120, 193)",
          "show": false
        },
        "tableColumn": "",
        "targets": [
          {
            "alias": "total_req",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT max($aggregation) FROM  \"$test_type\"  WHERE  \"request_name\"= 'allRequests' AND \"simulation\"= '$test' AND \"status\" = 'ok'  AND \"user_count\" = '$users' AND \"env\"='$env' AND $timeFilter GROUP BY count",
            "rawQuery": true,
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "thresholds": "",
        "title": "$aggregation, ms",
        "transparent": true,
        "type": "singlestat",
        "valueFontSize": "80%",
        "valueMaps": [
          {
            "op": "=",
            "text": "N/A",
            "value": "null"
          }
        ],
        "valueName": "avg"
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "gatling",
        "decimals": 2,
        "fill": 1,
        "gridPos": {
          "h": 11,
          "w": 24,
          "x": 0,
          "y": 4
        },
        "id": 2,
        "legend": {
          "alignAsTable": true,
          "avg": true,
          "current": false,
          "hideEmpty": false,
          "hideZero": false,
          "max": true,
          "min": true,
          "rightSide": true,
          "show": true,
          "total": false,
          "values": true
        },
        "lines": true,
        "linewidth": 1,
        "links": [],
        "nullPointMode": "null",
        "percentage": false,
        "pointradius": 3,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [
          {
            "alias": "active users",
            "yaxis": 2
          },
          {
            "alias": "active users",
            "color": "#7eb26d"
          }
        ],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "alias": "$tag_request_name",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT max(\"$aggregation\") FROM \"$test_type\" WHERE env='$env' AND simulation='$test' AND user_count='$users' and status='ok' AND request_name != 'allRequests' AND $timeFilter GROUP BY time($grouping), request_name fill(null)",
            "rawQuery": true,
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "alias": "active users",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT max(\"active\") FROM \"users\" WHERE  env='$env' AND simulation='$test' AND user_count='$users' AND $timeFilter GROUP BY time($grouping) fill(none)",
            "rawQuery": true,
            "refId": "B",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "alias": "FAILED.$tag_request_name",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT max(\"$aggregation\") FROM \"$test_type\" WHERE env='$env' AND simulation='$test' AND user_count='$users' and status='ko' AND request_name != 'allRequests' AND $timeFilter GROUP BY time($grouping), request_name fill(null)",
            "rawQuery": true,
            "refId": "C",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Response Times Over Time ($grouping aggregation)",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "transparent": false,
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "decimals": null,
            "format": "ms",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": "0",
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "gatling",
        "fill": 1,
        "gridPos": {
          "h": 11,
          "w": 24,
          "x": 0,
          "y": 15
        },
        "id": 4,
        "legend": {
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "links": [],
        "nullPointMode": "null",
        "percentage": false,
        "pointradius": 5,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [
          {
            "alias": "active users",
            "yaxis": 2
          },
          {
            "alias": "max",
            "bars": true,
            "color": "#cca300",
            "lines": false,
            "stack": true,
            "zindex": 0
          },
          {
            "alias": "failed",
            "bars": true,
            "color": "#bf1b00",
            "lines": false,
            "stack": true
          },
          {
            "alias": "mean",
            "bars": true,
            "color": "#508642",
            "lines": false,
            "stack": false,
            "zindex": 3
          }
        ],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "alias": "active users",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT max(\"active\") FROM \"users\" WHERE test_type='$test_type' AND simulation='$test' AND user_count='$users' AND env='$env' AND $timeFilter GROUP BY time($grouping) fill(none)",
            "rawQuery": true,
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "alias": "max",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT max(\"count\") as \"max_1s\" FROM \"$test_type\" WHERE simulation='$test'  AND status = 'ok' AND user_count='$users' AND env='$env' AND  \"request_name\" = 'allRequests' AND $timeFilter GROUP BY time($grouping)",
            "rawQuery": true,
            "refId": "B",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "alias": "mean",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT mean(\"count\") as \"avg_1s\" FROM \"$test_type\" WHERE simulation='$test'  AND status = 'ok' AND user_count='$users' AND env='$env' AND  \"request_name\" = 'allRequests' AND $timeFilter GROUP BY time($grouping)",
            "rawQuery": true,
            "refId": "C",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "alias": "failed",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT max(\"count\") as \"ko_tps\" FROM \"$test_type\" WHERE simulation='$test'  AND status = 'ko' AND user_count='$users' AND env='$env' AND  \"request_name\" = 'allRequests' AND $timeFilter GROUP BY time($grouping)",
            "rawQuery": true,
            "refId": "D",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Throughput ($grouping aggregation)",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "decimals": null,
            "format": "short",
            "label": "RPS",
            "logBase": 1,
            "max": null,
            "min": "0",
            "show": true
          },
          {
            "format": "short",
            "label": "Active Users",
            "logBase": 1,
            "max": null,
            "min": "0",
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": true,
        "dashLength": 10,
        "dashes": false,
        "datasource": "gatling",
        "decimals": 0,
        "fill": 1,
        "gridPos": {
          "h": 9,
          "w": 12,
          "x": 0,
          "y": 26
        },
        "id": 6,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": true,
          "values": true
        },
        "lines": false,
        "linewidth": 1,
        "links": [],
        "nullPointMode": "null",
        "percentage": false,
        "pointradius": 5,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [
          {
            "alias": "errors",
            "bars": true,
            "color": "#bf1b00"
          }
        ],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "alias": "t < $low_limit ms",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT SUM(count) FROM \"$test_type\" WHERE request_name='allRequests'  AND simulation='$test' AND user_count='$users' AND status='ok' AND \"$aggregation\"<=$low_limit AND env ='$env' AND $timeFilter GROUP BY time($grouping) fill(null)",
            "rawQuery": true,
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "alias": "$low_limit  < t < $high_limit",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT SUM(count) FROM \"$test_type\" WHERE request_name='allRequests'  AND simulation='$test' AND user_count='$users' AND status='ok' AND \"$aggregation\">$low_limit AND \"$aggregation\"<$high_limit  AND env ='$env' AND $timeFilter GROUP BY time($grouping) fill(null)",
            "rawQuery": true,
            "refId": "B",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "alias": "t > $high_limit",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT SUM(count) FROM \"$test_type\" WHERE request_name='allRequests'  AND simulation='$test' AND user_count='$users' AND status='ok' AND \"$aggregation\">=$high_limit  AND env ='$env' AND $timeFilter GROUP BY time($grouping) fill(null)",
            "rawQuery": true,
            "refId": "C",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "alias": "errors",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT SUM(count) FROM \"$test_type\" WHERE request_name='allRequests'  AND simulation='$test' AND user_count='$users' AND status='ko' AND env ='$env' AND $timeFilter GROUP BY time($grouping) fill(null)",
            "rawQuery": true,
            "refId": "D",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "$aggregation response time distribution",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "series",
          "name": null,
          "show": true,
          "values": [
            "total"
          ]
        },
        "yaxes": [
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": false
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": true,
        "dashLength": 10,
        "dashes": false,
        "datasource": "gatling",
        "decimals": 0,
        "fill": 1,
        "gridPos": {
          "h": 9,
          "w": 12,
          "x": 12,
          "y": 26
        },
        "id": 17,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": true,
          "values": true
        },
        "lines": false,
        "linewidth": 1,
        "links": [],
        "nullPointMode": "null",
        "percentage": false,
        "pointradius": 5,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "alias": "$tag_request_name",
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "SELECT count FROM  \"$test_type\"  WHERE  \"request_name\"!= 'allRequests' AND \"simulation\"= '$test' AND \"status\" = 'ok'  AND \"user_count\" = '$users' AND \"env\"='$env' AND $timeFilter GROUP BY request_name",
            "rawQuery": true,
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Total Requests",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "series",
          "name": null,
          "show": true,
          "values": [
            "total"
          ]
        },
        "yaxes": [
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": false
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "content": "<script type=\"text/javascript\" language=\"javascript\" src=\"//cdn.jsdelivr.net/gh/carrier-io/carrier-io/grafana_libs/grafana_wrapper.js\" />\n<script type=\"text/javascript\" language=\"javascript\" src=\"//cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js \"/>\n<script>\nfunction generateQuery(wrapper){\n    function appendValues(name,arr){\n        return (arr.length) ? (name + '=~ /^(' + arr.join('|') + ')$/ AND ') : '';\n    }\n\n    var AND  = ' AND ';\n    var WHERE = ' WHERE ';\n    var GROUP_BY = ' GROUP BY request_name; ';\n    var query;\n    var testTypes = wrapper.getVar('test_type', onAllEmpty=false).toString();\n    var environments = appendValues('env', wrapper.getVar('env'));\n    var userCounts = appendValues('user_count', wrapper.getVar('users'));\n\n    var simulation = ' simulation=\\'' +  wrapper.getVar('test')[0] + '\\'';\n    var timeFilter = wrapper.getTime()['filter'];\n    var from_block =  testTypes + WHERE + simulation + AND + userCounts + environments;\n\n    query = 'SELECT SUM(count) AS \"total\" FROM ' + from_block + 'status= \\'all\\'' + AND +  timeFilter + GROUP_BY;\n    query += 'SELECT SUM(count) AS \"ok\" FROM ' + from_block +  'status= \\'ok\\'' + AND + timeFilter + GROUP_BY;\n\n    duplicate_part =  from_block +  'status= \\'all\\'' + AND +  timeFilter + GROUP_BY;\n    query += 'SELECT MEAN(avrg_rps) AS \"rps\" FROM (SELECT MEAN(count) AS \"avrg_rps\" FROM ' + from_block +' status= \\'ok\\' AND ' + timeFilter+ ' GROUP BY time(1s)) GROUP BY request_name;'\n\n    query += 'SELECT MIN(min) AS \"min\", MEAN(mean) AS \"average\", MAX(max) AS \"max\"  FROM ' + duplicate_part;\n    query += 'SELECT STDDEV(mean)        AS \"stddev\" FROM ' + duplicate_part;\n    query += 'SELECT MEDIAN(mean)        AS \"median\" FROM ' + duplicate_part;\n    query += 'SELECT PERCENTILE(mean,75) AS \"perc75\" FROM ' + duplicate_part;\n    query += 'SELECT PERCENTILE(mean,95) AS \"perc95\" FROM ' + duplicate_part;\n    query += 'SELECT PERCENTILE(mean,99) AS \"perc99\" FROM ' + duplicate_part;\n\n    return query;\n};\n\nfunction formatDataset(data){\n    rows = {};\n    results = data.results;\n    results.forEach(function(result, i) {\n        series = result.series;\n        series.forEach(function(serie, s) {\n            var request_name = serie.tags.request_name\n            var keys = serie.columns.slice(1);\n            var values = serie.values[0].slice(1);\n            var row = (request_name in rows) ? rows[request_name] : {};\n            values.forEach( function(value, v) {\n                row[keys[v]] = value!=null ? value : 0;\n            });\n            rows[request_name] = row;\n        });\n    });\n    return rows\n}\n\nfunction appendSTRow(row){\n    $('#summary-table').DataTable().row.add(row).draw()\n}\n\nfunction retrieveData(db_name, query){\n    $.get(\"/grafana/api/datasources/proxy/4/query\", { q: query, db: \"$db_name\", epoch: EPOCH},\n        function(data, status){\n            if(status == 'success'){\n                var series = data.results[0].series\n                if(typeof series == 'undefined'){\n                    showErrMessage(\"No datapoints in selected time range. Try to change filter parameters.\")\n                }else{\n                    removeSpinner()\n                    var rows = formatDataset(data)\n                    generateSummaryDataTable()\n                    for (request_name in rows){\n                        request = rows[request_name]\n                        var total =  request['total']\n                        var ok = request['ok']\n                        var ko =  total > ok  ? total - ok : 0\n\n                        var ko_perc = ko > 0 ? parseFloat((ko/total) * 100).toFixed(ROUND_FLOAT_FACTOR) : 0.00\n                        var rps = request['rps'] ==null ? 0.0 : parseFloat(request['rps']).toFixed(3)\n                        var min = request['min'] ==null ? 0.0 : parseFloat(request['min']/1000).toFixed(ROUND_FLOAT_FACTOR)\n                        var median = request['median'] ==null ? 0.0 : parseFloat(request['median']/1000).toFixed(ROUND_FLOAT_FACTOR)\n                        var perc75 = request['perc75'] ==null ? 0.0 : parseFloat(request['perc75']/1000).toFixed(ROUND_FLOAT_FACTOR)\n                        var perc95 = request['perc95'] ==null ? 0.0 : parseFloat(request['perc95']/1000).toFixed(ROUND_FLOAT_FACTOR)\n                        var perc99 = request['perc99'] ==null ? 0.0 : parseFloat(request['perc99']/1000).toFixed(ROUND_FLOAT_FACTOR)\n                        var max = request['max'] ==null ? 0.0 : parseFloat(request['max']/1000).toFixed(ROUND_FLOAT_FACTOR)\n                        var average = request['average'] ==null ? 0.0 : parseFloat(request['average']/1000).toFixed(ROUND_FLOAT_FACTOR)\n                        var stddev = request['stddev'] ==null ? 0.0 : parseFloat(request['stddev']/1000).toFixed(ROUND_FLOAT_FACTOR)\n                        row = [request_name, total, ok, ko, ko_perc, rps, min, median, perc75, perc95, perc99, max, average, stddev]\n\n                        appendSTRow(row)\n                    }\n                }\n            }else{\n                showErrMessage(\"Error occured during quering data. Check your datasource settings.\")\n            }\n        });\n}\n\nfunction emptySummaryTable(){\n    $(\"#summary\").empty();\n}\n\nfunction addSpinner(){\n    if ($('div.spinner').length == 0){\n        var spinner = $('<div>')\n        spinner.attr(\"class\",\"spinner\");\n        spinner.html(\"<div  style=\\\"text-align: center;\\\"> <i class=\\\"fa fa-spinner fa-spin\\\" style=\\\" font-size: xx-large;\\\"></i> </div>\")\n        $(\"#summary\").append(spinner)\n    }\n}\nfunction removeSpinner(){\n    $('#summary div.spinner').remove()\n}\n\nfunction initSummaryDataTable(table){\n    table.DataTable({\n        \"empty\": true,\n        \"iDisplayLength\": 10,\n        \"lengthMenu\": [[5, 10, 20, 40, -1], [5, 10, 20, 40, \"All\"]],\n        \"order\": [[ 0, \"asc\" ]],\n        \"pagingType\": \"full_numbers\",\n        \"responsive\": true,\n        \"rowCallback\": function(row, data, index){\n            // errors\n            if(data[4] > 0. && data[4] <= ERROR_PERC_TRESHOLD){\n                $(row).find('td:eq(3)').css('color', 'orange');\n                $(row).find('td:eq(4)').css('color', 'orange');\n            }else if(data[4] > ERROR_PERC_TRESHOLD){\n                $(row).find('td:eq(3)').css('color', 'red');\n                $(row).find('td:eq(4)').css('color', 'red');\n            }\n            // response times\n            for (var i = 6; i <= 13; i++){\n\n                if(data[i] < LOWER_RT_TRESHOLD){\n                    $(row).find('td:eq('+i+')').css('color', 'green');\n                    $(row).find('td:eq('+i+')').css('color', 'green');\n                }else if(data[i] > HIGHER_RT_TRESHOLD){\n\n                    $(row).find('td:eq('+i+')').css('color', 'red');\n                    $(row).find('td:eq('+i+')').css('color', 'red');\n                }else{\n                    $(row).find('td:eq('+i+')').css('color', 'orange');\n                    $(row).find('td:eq('+i+')').css('color', 'orange');\n                }\n            }\n        }\n    });\n}\n\nfunction generateSummaryDataTable(){\n    emptySummaryTable();\n    var table = $('<table>');\n    table.attr(\"id\",\"summary-table\");\n    table.append(generateSTHead());\n    table.append(generateSTBody());\n    $('#summary').append(table);\n    initSummaryDataTable(table);\n    addSTSelectionFeature();\n}\n\nfunction generateSTHead(){\n    var cellNames = [\"Requests\",\"Total\",\"OK\",\"KO\",\"% KO\",\"Req/s\",\"Min\",\"50th pct\",\"75th pct\",\"95th pct\",\"99th pct\",\"Max\",\"Average\",\"Std Dev\"];\n    tHead = $('<thead>');\n    tHead.attr(\"id\",\"summary-table-head\");\n    tRow = $('<tr>');\n    for (var i = 0; i < cellNames.length; i++){\n        tHeadCell = $('<th>');\n        tHeadCell.text(cellNames[i])\n        tRow.append(tHeadCell);\n    }\n    tHead.append(tRow);\n\n    return tHead;\n}\nfunction generateSTBody(){\n    var tBody = $('<tbody>');\n    tBody.attr(\"id\",\"summary-table-body\");\n\n    return tBody;\n}\n\nfunction addSTSelectionFeature(){\n    var table = $('#summary-table').DataTable();\n    $('#summary-table tbody').on( 'click', 'tr', function () {\n        if ($(this).hasClass('selected')) {\n            $(this).removeClass('selected');\n        }\n        else {\n            table.$('tr.selected').removeClass('selected');\n            $(this).addClass('selected');\n        }\n    } );\n\n    $('#button').click( function () {\n        table.row('.selected').remove().draw( false );\n    } );\n}\n\nfunction showErrMessage(errMessage){\n    removeSpinner();\n    $(\"#summary\").empty();\n    message = $('<span>');\n    message.attr(\"id\",\"summary-table-message\");\n    message.text(errMessage);\n    $(\"#summary\").append(message);\n}\n\nfunction waitForSTGWrapper(){\n    addSpinner();\n    try{\n        var wrapper = new GWrapper(\"API_Summary_Table\");\n        checkSTIsLoaded(wrapper)\n    }catch(err){\n        setTimeout(function() { waitForSTGWrapper()}, 500);\n    }\n}\n\nfunction checkSTIsLoaded(wrapper){\n    if($.fn.DataTable){\n        query = generateQuery(wrapper);\n        db_name = wrapper.getVar('db_name');\n        retrieveData(db_name, query);\n    }else{\n        setTimeout(function() { checkSTIsLoaded()}, 500);\n    }\n}\n\nEPOCH = \"ms\";\nTABLE_TIME_EPOCH = 's'; //s for seconds, any other value for milliseconds\n\nLOWER_RT_TRESHOLD = parseFloat(\"$low_limit\")/1000.0\nHIGHER_RT_TRESHOLD = parseFloat(\"$high_limit\")/1000.0\nERROR_PERC_TRESHOLD = 1.0;\nROUND_FLOAT_FACTOR = 3;\n\nwindow.onload = waitForSTGWrapper();\nangular.element('grafana-app').injector().get('$rootScope').$on('refresh',function(){waitForSTGWrapper()});\n</script>\n\n\n<style type=\"text/css\">\n    #summary-table-body>tr.selected{ background: #292929; font-weight: 600;} #summary-table-body>tr:hover{ background: #292929;} #summary-table td{text-align:center} #summary-table-body > tr>:nth-child(1) {text-align:left}\n    #summary-table_filter,.dataTables_length{display:inline-block}.dataTables_length{padding-bottom:20px;padding-right:23px}input[type=search]{border-radius:5px}select[name=summary-table_length]{height:23px;width:65px;border-radius:5px}.paging_full_numbers>a,.paging_full_numbers>span>a{padding-right:10px}#summary-table-message{display:table;margin-left:auto;margin-right:auto}#summary-table{width:100%!important}th{text-align:center}\n</style>\n<div id = \"summary\"></div>",
        "gridPos": {
          "h": 13,
          "w": 24,
          "x": 0,
          "y": 35
        },
        "id": 8,
        "links": [],
        "mode": "html",
        "title": "Summary Table",
        "type": "text"
      }
    ],
    "refresh": false,
    "schemaVersion": 16,
    "style": "dark",
    "tags": [],
    "templating": {
      "list": [
        {
          "allValue": null,
          "current": {
            "text": "percentiles95",
            "value": "percentiles95"
          },
          "hide": 0,
          "includeAll": false,
          "label": null,
          "multi": false,
          "name": "aggregation",
          "options": [
            {
              "selected": true,
              "text": "percentiles95",
              "value": "percentiles95"
            },
            {
              "selected": false,
              "text": "max",
              "value": "max"
            },
            {
              "selected": false,
              "text": "mean",
              "value": "mean"
            },
            {
              "selected": false,
              "text": "min",
              "value": "min"
            },
            {
              "selected": false,
              "text": "percentiles50",
              "value": "percentiles50"
            },
            {
              "selected": false,
              "text": "percentiles75",
              "value": "percentiles75"
            },
            {
              "selected": false,
              "text": "percentiles99",
              "value": "percentiles99"
            }
          ],
          "query": "percentiles95, max, mean, min, percentiles50, percentiles75, percentiles99",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "allValue": null,
          "current": {},
          "datasource": "gatling",
          "definition": "show measurements",
          "hide": 0,
          "includeAll": false,
          "label": "Test Type",
          "multi": false,
          "name": "test_type",
          "options": [],
          "query": "show measurements",
          "refresh": 1,
          "regex": "/[^users]/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tags": [],
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "allValue": null,
          "current": {},
          "datasource": "gatling",
          "definition": "SHOW TAG VALUES FROM /.*/ WITH KEY = \"simulation\"",
          "hide": 0,
          "includeAll": false,
          "label": "Test",
          "multi": false,
          "name": "test",
          "options": [],
          "query": "SHOW TAG VALUES FROM /.*/ WITH KEY = \"simulation\"",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tags": [],
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "allValue": null,
          "current": {},
          "datasource": "gatling",
          "definition": "SHOW TAG VALUES FROM /.*/ WITH KEY = \"user_count\"",
          "hide": 0,
          "includeAll": false,
          "label": "Users",
          "multi": false,
          "name": "users",
          "options": [],
          "query": "SHOW TAG VALUES FROM /.*/ WITH KEY = \"user_count\"",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tags": [],
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "allValue": null,
          "current": {},
          "datasource": "gatling",
          "definition": "SHOW TAG VALUES FROM /.*/ WITH KEY = \"env\"",
          "hide": 0,
          "includeAll": false,
          "label": "Environment",
          "multi": false,
          "name": "env",
          "options": [],
          "query": "SHOW TAG VALUES FROM /.*/ WITH KEY = \"env\"",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tags": [],
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "auto": true,
          "auto_count": 1,
          "auto_min": "1s",
          "current": {
            "text": "1s",
            "value": "1s"
          },
          "hide": 0,
          "label": "Grouping",
          "name": "grouping",
          "options": [
            {
              "selected": false,
              "text": "auto",
              "value": "$__auto_interval_grouping"
            },
            {
              "selected": true,
              "text": "1s",
              "value": "1s"
            },
            {
              "selected": false,
              "text": "5s",
              "value": "5s"
            },
            {
              "selected": false,
              "text": "10s",
              "value": "10s"
            },
            {
              "selected": false,
              "text": "30s",
              "value": "30s"
            },
            {
              "selected": false,
              "text": "1m",
              "value": "1m"
            },
            {
              "selected": false,
              "text": "5m",
              "value": "5m"
            },
            {
              "selected": false,
              "text": "10m",
              "value": "10m"
            },
            {
              "selected": false,
              "text": "30m",
              "value": "30m"
            },
            {
              "selected": false,
              "text": "1h",
              "value": "1h"
            },
            {
              "selected": false,
              "text": "6h",
              "value": "6h"
            },
            {
              "selected": false,
              "text": "12h",
              "value": "12h"
            },
            {
              "selected": false,
              "text": "1d",
              "value": "1d"
            }
          ],
          "query": "1s,5s,10s,30s,1m,5m,10m,30m,1h,6h,12h,1d",
          "refresh": 2,
          "skipUrlSync": false,
          "type": "interval"
        },
        {
          "current": {
            "text": "250",
            "value": "250"
          },
          "hide": 0,
          "label": "Yellow Threshold",
          "name": "low_limit",
          "options": [
            {
              "selected": true,
              "text": "250",
              "value": "250"
            }
          ],
          "query": "250",
          "skipUrlSync": false,
          "type": "textbox"
        },
        {
          "current": {
            "text": "700",
            "value": "700"
          },
          "hide": 0,
          "label": "Red Threshold",
          "name": "high_limit",
          "options": [
            {
              "selected": true,
              "text": "700",
              "value": "700"
            }
          ],
          "query": "700",
          "skipUrlSync": false,
          "type": "textbox"
        },
        {
          "current": {
            "value": "gatling",
            "text": "gatling"
          },
          "hide": 2,
          "label": null,
          "name": "db_name",
          "options": [
            {
              "value": "gatling",
              "text": "gatling"
            }
          ],
          "query": "gatling",
          "skipUrlSync": false,
          "type": "constant"
        }
      ]
    },
    "time": {
      "from": "now-15m",
      "to": "now"
    },
    "timepicker": {
      "refresh_intervals": [
        "5s",
        "10s",
        "30s",
        "1m",
        "5m",
        "15m",
        "30m",
        "1h",
        "2h",
        "1d"
      ],
      "time_options": [
        "5m",
        "15m",
        "1h",
        "6h",
        "12h",
        "24h",
        "2d",
        "7d",
        "30d"
      ]
    },
    "timezone": "",
    "title": "Gatling Performance",
    "uid": "q68rYQlik",
    "version": 2
  }
}